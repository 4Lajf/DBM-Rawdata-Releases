{
  "name": "autorole",
  "permissions": "NONE",
  "restriction": "1",
  "_id": "DtBMG",
  "actions": [
    {
      "info": "19",
      "storage": "1",
      "varName2": "botPrefix",
      "name": "Store Bot Client Info"
    },
    {
      "behavior": "1",
      "interpretation": "1",
      "code": "const botPrefix = tempVars('botPrefix');\nvar reactionArray = [];\nvar rectarray = globalVars('reactionRoleInf');\nconst _this = this;\nvar tempRole;\n\nmsg.channel.send(`Welcome to the autrole promt.\\nPlease now insert a role along with an emoji.\\nEx. @role âœ…`)\n\t.then((message) => {\n\t\tmsg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n\t\t\t\tmax: 1,\n\t\t\t\ttime: 30000,\n\t\t\t\terrors: ['time'],\n\t\t\t})\n\t\t\t.then((collected) => {\n\t\t\t\tmsg.author.lastMessage.delete();\n\t\t\t\tif (collected.first().mentions.roles.first()) {\n                    if (collected.first().content.split(/ +/g).length > 1) {\n                        var unicodeStored = collected.first().content.split(/ +/g)[1];\n                        const roleMentioned = collected.first().mentions.roles.first()\n                        if (unicodeStored.charCodeAt(0 > 127)) {\n                            reactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n                            message.edit(`You have attached the role ${roleMentioned} to the reaction ${unicodeStored}.\\nIf this is correct, please respond \"confirm\".\\nIf not, please respond \"cancel\" to cancel the prompt.`);\n                            msg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n                                    max: 1,\n                                    time: 30000,\n                                    errors: ['time'],\n                                })\n                                .then((collected) => {\n                                    msg.author.lastMessage.delete();\n                                    if (collected.first().content.toLowerCase() == \"confirm\") {\n                                        reAsk(message)\n                                    } else if (collected.first().content.toLowerCase() == \"cancel\") {\n    \n                                    } else {\n    \n                                    }\n                                }).catch(() => {\n                                    message.delete();\n                                    msg.channel.send('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!');\n                                });\n                        } else {\n                            message.delete();\n                            msg.channel.send(\"Prompt has been cancelled, you didn't provide a valid emoji!\\nPlease re-execute the command to go through the prompt again!\")\n                        }\n                    } else {\n                        message.delete();\n                        msg.channel.send(\"Prompt has been cancelled, you didn't provide a emoji/mentioned role!\\nPlease re-execute the command to go through the prompt again!\")\n                    }\n\t\t\t\t} else {\n                    message.delete();\n                    msg.channel.send(\"Prompt has been cancelled, you didn't provide a valid response!\\nPlease re-execute the command to go through the prompt again!\")\n\t\t\t\t}\n\t\t\t}).catch(() => {\n                message.delete();\n                msg.channel.send('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!');\n            });\n\t})\n\nfunction reAsk(message) {\n\tif (reactionArray.length != 10) {\n\t\tvar finalText = \"\";\n\t\treactionArray.forEach(subarray => {\n\t\t\tfinalText = finalText + `${subarray[0]} => ${subarray[2]}\\n`\n\t\t})\n\t\tmessage.edit(`So far you have the following connections (Max 10)\\n ${finalText}\\n\\nIf you would like to attach another reaction to a role, please insert a role along with an emoji.\\nIf not, please reply with \"done\".\\nIf you would like to cancel the prompt, please respond with \"cancel\"`)\n\t\tmsg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n\t\t\t\tmax: 1,\n\t\t\t\ttime: 30000,\n\t\t\t\terrors: ['time'],\n\t\t\t})\n\t\t\t.then((collected) => {\n                msg.author.lastMessage.delete();\n\t\t\t\tif (collected.first().content.toLowerCase() == \"done\") {\n\t\t\t\t\tdone(message)\n\t\t\t\t} else if (collected.first().mentions.roles.first() == \"cancel\") {\n                    message.delete();\n                    msg.channel.send(\"Prompt has been cancelled.\\nPlease re-execute the command to go through the prompt again!\")\n\t\t\t\t} else {\n\t\t\t\t\tif (collected.first().mentions.roles.first()) {\n                        if (collected.first().content.split(/ +/g).length > 1) {\n                            var unicodeStored = collected.first().content.split(/ +/g)[1];\n\t\t\t\t\t\tconst roleMentioned = collected.first().mentions.roles.first()\n\t\t\t\t\t\tif (unicodeStored != null) {\n\t\t\t\t\t\t\tif (unicodeStored.charCodeAt(0 > 127)) {\n\t\t\t\t\t\t\t\treactionArray.push([unicodeStored, roleMentioned.id, roleMentioned.name]);\n\t\t\t\t\t\t\t\treAsk(message)\n\t\t\t\t\t\t\t} else {\n                                message.delete();\n                                msg.channel.send(\"Prompt has been cancelled, you didn't provide a valid emoji!\\nPlease re-execute the command to go through the prompt again!\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n                        } else {\n                            message.delete();\n                            msg.channel.send(\"Prompt has been cancelled, you didn't provide a emoji/mentioned role!\\nPlease re-execute the command to go through the prompt again!\")\n                        }\n\t\t\t\t\t} else {\n                        message.delete();\n                        msg.channel.send(\"Prompt has been cancelled, you didn't mention a valid role!\\nPlease re-execute the command to go through the prompt again!\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}).catch(() => {\n                message.delete();\n                msg.channel.send('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!');\n            });\n\t} else {\n\t\tdone(message);\n\t}\n\n}\n\nfunction done(message) {\n\tvar finalText = \"\";\n\treactionArray.forEach(subarray => {\n\t\tfinalText = finalText + `${subarray[0]} => ${subarray[2]}\\n`\n\t})\n\tmessage.edit(`Final conformation menu\\n\\nBelow is the list of reactions to their roles\\n${finalText}\\n\\nIf this is correct, please respond with a mention to a text channel where the role menu will be sent.\\nIf this isn't correct, respond with \"cancel\" to cancel the prompt.`)\n\tmsg.channel.awaitMessages(response => response.author.id == msg.author.id, {\n\t\t\tmax: 1,\n\t\t\ttime: 30000,\n\t\t\terrors: ['time'],\n\t\t})\n\t\t.then((collected) => {\n            msg.author.lastMessage.delete();\n\t\t\tif (collected.first().mentions.channels.first()) {\n                var menchannel = collected.first().mentions.channels.first()\n                message.delete();\n\t\t\t\tmenchannel.send({\n\t\t\t\t\t\tembed: {\n\t\t\t\t\t\t\tcolor: 0xffff00,\n\t\t\t\t\t\t\ttitle: \"Reaction Menu\",\n\t\t\t\t\t\t\tdescription: `React with the reaction listed to get the listed role for that reaction.\\n${finalText}`,\n\t\t\t\t\t\t\ttimestamp: new Date()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then((embedmessage) => {\n\t\t\t\t\t\treactionArray.forEach(subarray => {\n\t\t\t\t\t\t\tembedmessage.react(subarray[0])\n\t\t\t\t\t\t})\n\t\t\t\t\t\trectarray.push({\n                            [embedmessage.id]:reactionArray\n                        })\n                        _this.storeValue(rectarray, 3, \"reactionRoleInf\", cache);\n\t\t\t\t\t})\n\t\t\t} else if (collected.first().content == \"cancel\") {\n                message.delete();\n                msg.channel.send(\"Prompt has been cancelled.\\nPlease re-execute the command to go through the prompt again!\")\n\t\t\t} else {\n                message.delete();\n                msg.channel.send(\"Prompt has been cancelled, you didn't provide a valid response!\\nPlease re-execute the command to go through the prompt again!\")\n\t\t\t}\n\t\t}).catch(() => {\n            message.delete();\n            msg.channel.send('Sorry, you didnt provide a valid response in time!\\nPlease re-execute the command to go through the prompt again!');\n        });\n}",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    }
  ],
  "comType": "0"
}